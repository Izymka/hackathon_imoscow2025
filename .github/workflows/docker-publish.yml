name: Build and Publish Docker Image

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:buildx-stable-1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,enable=true,priority=600
            type=ref,event=tag,enable=true,priority=700
            type=sha,enable=true,priority=100
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push with cache
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      APP_NAME: ct-ml
    steps:
      - name: Set short SHA
        run: echo "IMAGE_TAG=sha-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: REGISTRY,IMAGE_NAME,APP_NAME,IMAGE_TAG
          script: |
            IMAGE_NAME_LOWER=$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]')
            FULL_IMAGE_NAME="${REGISTRY}/${IMAGE_NAME_LOWER}:${IMAGE_TAG}"
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            echo "Deploying $FULL_IMAGE_NAME..."
            docker pull $FULL_IMAGE_NAME
            docker stop $APP_NAME || true
            sleep 3
            docker rm $APP_NAME || true
            docker run -d -p 3102:8000 --restart always \
              -v /var/www/fastuser/data/ct-backend/ml-storage:/mnt/storage \
              --network ctnet \
              --name $APP_NAME $FULL_IMAGE_NAME
